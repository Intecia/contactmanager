{"version":3,"sources":["components/Contact.js","actions/contactActions.js","actions/types.js","components/Contacts.js","components/Header.js","components/About.js","components/TextInputGroup.js","components/AddContact.js","components/NotFound.js","components/EContact.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onShowClick","e","setState","onDeleteClick","id","a","props","deleteContact","this","contact","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","width","height","Component","connect","dispatch","Axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","key","get","res","data","Header","branding","defaultProps","TextInputGroup","label","value","placeholder","error","onChange","htmlFor","classnames","AddContact","target","onSubmit","preventDefault","newContact","uuid","addContact","history","push","post","EContact","match","params","console","log","updContact","updateContact","nextProps","nextState","getContact","put","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","About","NotFound","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a4b9ae6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../actions/contactActions\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onShowClick = e => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async id => {\r\n    this.props.deleteContact(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <h4>\r\n          {name}{\" \"}\r\n          <i\r\n            onClick={this.onShowClick}\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n          <i\r\n            className=\"fas fa-times\"\r\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n            onClick={this.onDeleteClick.bind(this, id)}\r\n          />\r\n          <Link to={`contact/edit/${id}`}>\r\n            <i\r\n              className=\"fas fa-pencil-alt\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                float: \"right\",\r\n                color: \"black\",\r\n                marginRight: \"1rem\",\r\n                width: \"20px\",\r\n                height: \"20px\"\r\n              }}\r\n            ></i>\r\n          </Link>\r\n        </h4>\r\n\r\n        {showContactInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Email: {email}</li>\r\n            <li className=\"list-group-item\">Phone: {phone}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteContact }\r\n)(Contact);\r\n","import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  GET_CONTACT,\r\n  UPDATE_CONTACT\r\n} from \"../actions/types\";\r\nimport Axios from \"axios\";\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  const res = await Axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n  dispatch({\r\n    type: GET_CONTACTS,\r\n    payload: res.data\r\n  });\r\n};\r\nexport const getContact = id => async dispatch => {\r\n  const res = await Axios.get(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`\r\n  );\r\n  dispatch({\r\n    type: GET_CONTACT,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n  dispatch({\r\n    type: DELETE_CONTACT,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  await Axios.post(\"https://jsonplaceholder.typicode.com/users\", contact);\r\n\r\n  dispatch({\r\n    type: ADD_CONTACT,\r\n    payload: contact\r\n  });\r\n};\r\n\r\nexport const updateContact = contact => async dispatch => {\r\n  console.log(\"TESTIII\");\r\n\r\n  const res = await Axios.put(\r\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\r\n    contact\r\n  );\r\n  console.log(\"Test\");\r\n\r\n  dispatch({\r\n    type: UPDATE_CONTACT,\r\n    payload: res.data\r\n  });\r\n};\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const GET_CONTACT = \"GET_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getContacts } from \"../actions/contactActions\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"display-4 mb-2\">\r\n          <span className=\"text-danger\">Contact </span>List\r\n        </h1>\r\n        {contacts.map(contact => (\r\n          <Contact key={contact.id} contact={contact} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  getContacts: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contact.contacts\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getContacts }\r\n)(Contacts);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.1</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  error,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"name\">{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport TextInputGroup from \"../components/TextInputGroup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addContact } from \"../actions/contactActions\";\r\nimport { connect } from \"react-redux\";\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    error: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ error: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ error: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ error: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    this.props.addContact(newContact);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, phone, email, error } = this.state;\r\n\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={error.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={this.onChange}\r\n              error={error.email}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Enter Phone\"\r\n              value={phone}\r\n              onChange={this.onChange}\r\n              error={error.phone}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Contact\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddContact.propTypes = {\r\n  addContact: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { addContact }\r\n)(AddContact);\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 NOT FOUND</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport TextInputGroup from \"./TextInputGroup\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContact, updateContact } from \"../actions/contactActions\";\r\nclass EContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    error: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const contact = this.state;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    const { name, email, phone } = nextProps.contact;\r\n\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n    console.log(nextProps.contact);\r\n  }\r\n  componentWillMount() {\r\n    const { id } = this.props.match.params;\r\n    console.log(this.props.getContact(id));\r\n  }\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ error: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ error: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ error: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const id = this.props.match.params.id;\r\n    console.log(id);\r\n\r\n    const updContact = {\r\n      id,\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    console.log(updContact);\r\n\r\n    this.props.updateContact(updContact);\r\n\r\n    // Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      error: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, phone, email, error } = this.state;\r\n\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={error.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={this.onChange}\r\n              error={error.email}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Enter Phone\"\r\n              value={phone}\r\n              onChange={this.onChange}\r\n              error={error.phone}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Contact\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nEContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  getContact: PropTypes.func.isRequired,\r\n  updateContact: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  contact: state.contact.contact\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getContact, updateContact }\r\n)(EContact);\r\n","const initialState = {\r\n  contacts: [],\r\n  contact: {}\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_CONTACTS\":\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      };\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"GET_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Contacts from \"./components/Contacts\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport AddContact from \"./components/AddContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NotFound from \"./components/NotFound\";\nimport EContact from \"./components/EContact\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}